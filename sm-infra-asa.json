{
   "$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
   "contentVersion":"1.0.0.0",
   "parameters":{
      "location":{
         "type":"string",
         "defaultValue":"eastus",
         "metadata":{
            "description":"Deployment location"
         }
      },
      "virtualNetworkName":{
         "defaultValue":"overlay-1",
         "type":"string",
         "metadata":{
            "description":"Virtual Network name"
         }
      },
      "virtualNetworkRG":{
         "defaultValue":"cApic-Azure",
         "type":"string",
         "metadata":{
            "description":"Identifies whether to use new or existing virtual network"
         }
      },
      "virtualNetworkAddressPrefixes":{
         "defaultValue":"100.64.0.0/16",
         "type":"string",
         "metadata":{
            "description":"Virtual Network Address prefixes"
         }
      },
      "virtualNetworkNewOrExisting":{
         "defaultValue":"existing",
         "type":"string",
         "metadata":{
            "description":"Identifies whether to use new or existing Virtual Network"
         }
      },
      "Subnet1Prefix":{
         "defaultValue":"100.64.254.0/24",
         "type":"string",
         "metadata":{
            "description":"Subnet 1 Prefix"
         }
      },
      "Subnet1Name":{
         "defaultValue":"service-mgmt",
         "type":"string",
         "metadata":{
            "description":"Subnet 1 Name"
         }
      },
"subnet1StartAddress" : {
            "type" : "string",
            "defaultValue": "100.64.254.51",
            "metadata" : {
                "description" : "Subnet 1 Starting IP Address - the ip address of ASAv in subnet1"
            }
      },
      "Subnet2Prefix":{
         "defaultValue":"100.64.6.0/24",
         "type":"string",
         "metadata":{
            "description":"Subnet 2 Prefix"
         }
      },
      "Subnet2Name":{
         "defaultValue":"Firewall-Untrust",
         "type":"string",
         "metadata":{
            "description":"Subnet 2 Name"
         }
      },
"subnet2StartAddress" : {
            "type" : "string",
            "defaultValue": "100.64.6.51",
            "metadata" : {
                "description" : "Subnet 2 Starting IP Address - the ip address of ASAv in subnet1"
            }
      },
      "Subnet3Prefix":{
         "defaultValue":"100.64.7.0/24",
         "type":"string",
         "metadata":{
            "description":"Subnet 3 Prefix"
         }
      },
      "Subnet3Name":{
         "defaultValue":"Firewall-Trust",
         "type":"string",
         "metadata":{
            "description":"Subnet 3 Name"
         }
      },
"subnet3StartAddress" : {
            "type" : "string",
            "defaultValue": "100.64.7.51",
            "metadata" : {
                "description" : "Subnet 3 Starting IP Address - the ip address of ASAv in subnet1"
            }
      },
      "Subnet4Prefix":{
         "defaultValue":"100.64.8.0/24",
         "type":"string",
         "metadata":{
            "description":"Subnet 4 Prefix"
         }
      },
      "Subnet4Name":{
         "defaultValue":"HubVMSubnet1",
         "type":"string",
         "metadata":{
            "description":"Subnet 4 Name"
         }
      },
"subnet4StartAddress" : {
            "type" : "string",
            "defaultValue": "100.64.8.51",
            "metadata" : {
                "description" : "Subnet 4 Starting IP Address - the ip address of ASAv in subnet1"
            }
      },
      "adminUsername":{
         "defaultValue":"asadmin",
         "type":"string",
         "metadata":{
            "description":"Username for the Virtual Machine."
         }
      },
      "adminPassword":{
         "defaultValue":"SuperSekret1@!",
         "type":"securestring",
         "metadata":{
            "description":"Password for the Virtual Machine."
         }
      },
      "sshPublicKey":{
         "defaultValue":"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDHxRrCjJ0p7FlB71+jeE4U2Gg+M/5QRe5wMWA2SSC9YGJGbndSuwbWjlO6RwYs+joFGe6YJnjGvQDVLgXKFvC+k9l5QKys+h8dqFdItpuGqI3VbijTZu/m/1dP+1UTK8ltJBTS9K1e6ZcIIJeSHGU9Ss3ZidcCaJUXqPszG5zKSlF8yVfLsSOD4XG3nkRcbGMbJyOoM7kD1BuQq1W/wqprSWY5jh/ks6YrVQN/qa1mJy/3A6HzBP2r7B7x8WDZ3OXH1bwzzw861MDmRPplcti0oOY1m+5biCOBfSCu5wpNcknBA6WkMLPfGTCCf40hj/xCx36rk1IAuc5NbZS8qbKt",
         "type":"string",
         "metadata":{
            "description":"SSH Key for the virtual machines"
         }
      },
      "authenticationType":{
         "defaultValue":"password",
         "type":"string",
         "metadata":{
            "description":"Authentication Type to chose for the Virtual Machines"
         }
      },
      "vmName":{
         "defaultValue":"sm-eastASA1",
         "type":"string",
         "metadata":{
            "description":"Name for the Virtual Machine."
         }
      },
      "softwareVersion":{
         "type":"string",
         "defaultValue":"915.1.1",
         "allowedValues":[
            "915.1.1",
            "914.1.30",
            "912.4.4"
         ],
         "metadata":{
            "description":"Software version to deploy."
         }
      },
        "StorageAccountName": {
            "type": "string",
            "defaultValue": "smeastasastorage1",
            "metadata": {
                "description": "Storage account name where VM files will be stored - used for both new and existing storage account."
            }
      },
      "storageAccountType":{
         "defaultValue":"Standard_LRS",
         "allowedValues":[
            "Standard_LRS"
         ],
         "type":"string",
         "metadata":{
            "description":"The type of storage account created."
         }
      },
      "storageAccountNewOrExisting":{
         "type":"string",
         "defaultValue":"new",
         "allowedValues":[
            "new",
            "existing"
         ],
         "metadata":{
            "description":"Identifies whether to use new or existing Storage Account"
         }
      },
      "storageAccountRG":{
         "type":"string",
         "defaultValue":"[resourceGroup().name]",
         "metadata":{
            "description":"Resource Group containing existing storage account"
         }
      },
      "publicIPAddressName":{
         "defaultValue":"sm-asa-eastusasav1-pip",
         "type":"string",
         "metadata":{
            "description":"Name of the Public IP Address"
         }
      },
      "publicIPDnsLabel":{
         "type":"string",
          "defaultValue":"sm-asa-east1",
         "metadata":{
            "description":"Unique DNS Prefix for the Public IP used to access the Virtual Machine."
         }
      },
      "publicIPNewOrExisting":{
         "defaultValue":"existing",
         "allowedValues":[
            "new",
            "existing"
         ],
         "type":"string",
         "metadata":{
            "description":"Indicates whether the Public IP is new or existing"
         }
      },
      "publicIPRG":{
         "type":"string",
         "defaultValue":"[resourceGroup().name]",
         "metadata":{
            "description":"Resource Group of the public IP"
         }
      },
      "publicIPAllocationMethod":{
         "defaultValue":"Static",
         "type":"string",
         "allowedValues":[
            "Dynamic",
            "Static"
         ],
         "metadata":{
            "description":"Select Dynamic or Static as the type of public IP."
         }
      },
      "publicIPsku":{
         "type":"string",
         "defaultValue":"Standard",
         "allowedValues":[
            "Basic",
            "Standard"
         ],
         "metadata":{
            "description":"Indicates whether the public IP will be of Basic SKU or Standard SKU"
         }
      },
      "vmSize":{
         "defaultValue":"Standard_D3_v2",
         "allowedValues":[
            "Standard_D3",
            "Standard_D3_v2"
         ],
         "type":"string",
         "metadata":{
            "description":"Size of the Virtual Machine"
         }
      },
      "vmLargerSize":{
         "defaultValue":"Standard_D3_v2",
         "allowedValues":[
            "Standard_D3",
            "Standard_D4",
            "Standard_D3_v2",
            "Standard_D4_v2",
            "Standard_D8_v3",
            "Standard_DS3",
            "Standard_DS4",
            "Standard_DS3_v2",
            "Standard_DS4_v2",
            "Standard_F4",
            "Standard_F8",
            "Standard_F4s",
            "Standard_F8s"
         ],
         "type":"string",
         "metadata":{
            "description":"Size of the Virtual Machine Larger"
         }
      }
   },
   "variables":{
      "imagePublisher":"cisco",
      "imageOffer":"cisco-asav",
      "imageSKU":"asav-azure-byol",
      "softwareVersion":"[parameters('softwareVersion')]",
      "vmSizeEffective":"[if(contains('99.-910.-912.', substring(variables('softwareVersion'),0,3)), parameters('vmSize'), parameters('vmLargerSize'))]",
      "OSDiskName":"[concat(parameters('vmName'),'-disk')]",
      "subnet1Ref":"[resourceId(parameters('virtualNetworkRG'), 'Microsoft.Network/virtualNetworks/subnets/', parameters('virtualNetworkName'), parameters('subnet1Name'))]",
      "subnet2Ref":"[resourceId(parameters('virtualNetworkRG'), 'Microsoft.Network/virtualNetworks/subnets/', parameters('virtualNetworkName'), parameters('subnet2Name'))]",
      "subnet3Ref":"[resourceId(parameters('virtualNetworkRG'), 'Microsoft.Network/virtualNetworks/subnets/', parameters('virtualNetworkName'), parameters('subnet3Name'))]",
      "subnet4Ref":"[resourceId(parameters('virtualNetworkRG'), 'Microsoft.Network/virtualNetworks/subnets/', parameters('virtualNetworkName'), parameters('subnet4Name'))]",
      "routeTable1Name":"[concat(parameters('Subnet1Name'),'-ASAv-RouteTable')]",
      "routeTable2Name":"[concat(parameters('Subnet2Name'),'-ASAv-RouteTable')]",
      "routeTable3Name":"[concat(parameters('Subnet3Name'),'-ASAv-RouteTable')]",
      "routeTable4Name":"[concat(parameters('Subnet4Name'),'-ASAv-RouteTable')]",
      "routeTable1Id":"[resourceId(parameters('virtualNetworkRG'),'Microsoft.Network/routeTables',variables('routeTable1Name'))]",
      "routeTable2Id":"[resourceId(parameters('virtualNetworkRG'),'Microsoft.Network/routeTables',variables('routeTable2Name'))]",
      "routeTable3Id":"[resourceId(parameters('virtualNetworkRG'),'Microsoft.Network/routeTables',variables('routeTable3Name'))]",
      "routeTable4Id":"[resourceId(parameters('virtualNetworkRG'),'Microsoft.Network/routeTables',variables('routeTable4Name'))]",
      "nsgname":"[concat(parameters('vmName'),'-SecurityGroup')]",
      "sshKeyPath":"[concat('/home/',parameters('adminUsername'),'/.ssh/authorized_keys')]",
      "osProfilesshPublicKey":{
         "computername":"[parameters('vmName')]",
         "adminUsername":"[parameters('adminUsername')]",
         "linuxConfiguration":{
            "disablePasswordAuthentication":"true",
            "ssh":{
               "publicKeys":[
                  {
                     "path":"[variables('sshKeyPath')]",
                     "keyData":"[parameters('sshPublicKey')]"
                  }
               ]
            }
         }
      },
      "osProfilepassword":{
         "computername":"[parameters('vmName')]",
         "adminUsername":"[parameters('adminUsername')]",
         "adminPassword":"[parameters('adminPassword')]"
      }
   },
   "resources":[
      {
         "apiVersion":"2019-10-01",
         "name":"pid-5d91b9f4-27ad-53ca-bd33-de577ae21ef8",
         "type":"Microsoft.Resources/deployments",
         "properties":{
            "mode":"Incremental",
            "template":{
               "$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
               "contentVersion":"1.0.0.0",
               "resources":[

               ]
            }
         }
      },
      {
         "name":"[parameters('storageAccountName')]",
         "type":"Microsoft.Storage/storageAccounts",
         "apiVersion":"2019-04-01",
         "condition":"[equals(parameters('storageAccountNewOrExisting'),'new')]",
         "sku":{
            "name":"[parameters('storageAccountType')]"
         },
         "kind":"Storage",
         "location":"[parameters('location')]",
         "properties":{

         }
      },
      {
         "name":"[parameters('publicIPAddressName')]",
         "type":"Microsoft.Network/publicIPAddresses",
         "apiVersion":"2019-02-01",
         "condition":"[equals(parameters('publicIPNewOrExisting'),'new')]",
         "location":"[parameters('location')]",
         "sku":{
            "name":"[parameters('publicIPsku')]"
         },
         "properties":{
            "publicIPAllocationMethod":"[parameters('publicIPAllocationMethod')]",
            "dnsSettings":{
               "domainNameLabel":"[parameters('publicIPDnsLabel')]"
            },
            "idleTimeoutInMinutes":30
         }
      },
      {
         "name":"[variables('nsgname')]",
         "type":"Microsoft.Network/networkSecurityGroups",
         "apiVersion":"2018-08-01",
         "location":"[parameters('location')]",
         "properties":{
            "securityRules":[
               {
                  "name":"SSH-Rule",
                  "properties":{
                     "description":"Allow SSH",
                     "protocol":"Tcp",
                     "sourcePortRange":"*",
                     "destinationPortRange":"22",
                     "sourceAddressPrefix":"*",
                     "destinationAddressPrefix":"*",
                     "access":"Allow",
                     "priority":100,
                     "direction":"Inbound"
                  }
               },
               {
                  "name":"UDP-Rule1",
                  "properties":{
                     "description":"Allow UDP",
                     "protocol":"Udp",
                     "sourcePortRange":"*",
                     "destinationPortRange":"500",
                     "sourceAddressPrefix":"*",
                     "destinationAddressPrefix":"*",
                     "access":"Allow",
                     "priority":101,
                     "direction":"Inbound"
                  }
               },
               {
                  "name":"UDP-Rule2",
                  "properties":{
                     "description":"Allow UDP",
                     "protocol":"Udp",
                     "sourcePortRange":"*",
                     "destinationPortRange":"4500",
                     "sourceAddressPrefix":"*",
                     "destinationAddressPrefix":"*",
                     "access":"Allow",
                     "priority":102,
                     "direction":"Inbound"
                  }
               }
            ]
         }
      },
      {
         "name":"[variables('routeTable1Name')]",
         "type":"Microsoft.Network/routeTables",
         "condition":"[equals(parameters('virtualNetworkNewOrExisting'),'new')]",
         "apiVersion":"2018-08-01",
         "location":"[parameters('location')]"
      },
      {
         "name":"[variables('routeTable2Name')]",
         "type":"Microsoft.Network/routeTables",
         "condition":"[equals(parameters('virtualNetworkNewOrExisting'),'new')]",
         "apiVersion":"2018-08-01",
         "location":"[parameters('location')]"
      },
      {
         "name":"[variables('routeTable3Name')]",
         "type":"Microsoft.Network/routeTables",
         "condition":"[equals(parameters('virtualNetworkNewOrExisting'),'new')]",
         "apiVersion":"2018-08-01",
         "location":"[parameters('location')]"
      },
      {
         "name":"[variables('routeTable4Name')]",
         "type":"Microsoft.Network/routeTables",
         "condition":"[equals(parameters('virtualNetworkNewOrExisting'),'new')]",
         "apiVersion":"2018-08-01",
         "location":"[parameters('location')]"
      },
      {
         "name":"[parameters('virtualNetworkName')]",
         "type":"Microsoft.Network/virtualNetworks",
         "apiVersion":"2018-08-01",
         "condition":"[equals(parameters('virtualNetworkNewOrExisting'),'new')]",
         "location":"[parameters('location')]",
         "dependsOn":[
            "[concat('Microsoft.Network/routeTables/', variables('routeTable1Name'))]",
            "[concat('Microsoft.Network/routeTables/', variables('routeTable2Name'))]",
            "[concat('Microsoft.Network/routeTables/', variables('routeTable3Name'))]",
            "[concat('Microsoft.Network/routeTables/', variables('routeTable4Name'))]"
         ],
         "properties":{
            "addressSpace":{
               "addressPrefixes":"[parameters('virtualNetworkAddressPrefixes')]"
            },
            "subnets":[
               {
                  "name":"[parameters('Subnet1Name')]",
                  "properties":{
                     "addressPrefix":"[parameters('Subnet1Prefix')]",
                     "routeTable":{
                        "id":"[variables('routeTable1Id')]"
                     }
                  }
               },
               {
                  "name":"[parameters('Subnet2Name')]",
                  "properties":{
                     "addressPrefix":"[parameters('Subnet2Prefix')]",
                     "routeTable":{
                        "id":"[variables('routeTable2Id')]"
                     }
                  }
               },
               {
                  "name":"[parameters('Subnet3Name')]",
                  "properties":{
                     "addressPrefix":"[parameters('Subnet3Prefix')]",
                     "routeTable":{
                        "id":"[variables('routeTable3Id')]"
                     }
                  }
               },
               {
                  "name":"[parameters('Subnet4Name')]",
                  "properties":{
                     "addressPrefix":"[parameters('Subnet4Prefix')]",
                     "routeTable":{
                        "id":"[variables('routeTable4Id')]"
                     }
                  }
               }
            ]
         }
      },
      {
         "name":"[concat(parameters('vmName'),'-Nic0')]",
         "type":"Microsoft.Network/networkInterfaces",
         "apiVersion":"2018-08-01",
         "location":"[parameters('location')]",
         "dependsOn":[
            "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]",
            "[concat('Microsoft.Network/networkSecurityGroups/',variables('nsgname'))]",
            "[concat('Microsoft.Network/publicIPAddresses/', parameters('publicIPAddressName'))]"
         ],
         "properties":{
            "ipConfigurations":[
               {
                  "name":"ipconfig1",
                  "properties":{
                     "privateIPAllocationMethod":"Static",
                     "privateIPAddress":"[parameters('subnet1StartAddress')]",
                     "subnet":{
                        "id":"[variables('subnet1Ref')]"
                     },
                     "publicIPAddress":{
                        "id":"[resourceId(parameters('publicIPRG'),'Microsoft.Network/publicIPAddresses',parameters('publicIPAddressName'))]"
                     }
                  }
               }
            ],
            "networkSecurityGroup":{
               "id":"[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgname'))]"
            },
            "enableIPForwarding":true
         }
      },
      {
         "name":"[concat(parameters('vmName'),'-Nic1')]",
         "type":"Microsoft.Network/networkInterfaces",
         "apiVersion":"2018-08-01",
         "location":"[parameters('location')]",
         "dependsOn":[
            "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
         ],
         "properties":{
            "ipConfigurations":[
               {
                  "name":"ipconfig1",
                  "properties":{
                     "privateIPAllocationMethod":"Static",
                     "privateIPAddress":"[parameters('subnet2StartAddress')]",
                     "subnet":{
                        "id":"[variables('subnet2Ref')]"
                     }
                  }
               }
            ],
            "enableIPForwarding":true
         }
      },
      {
         "name":"[concat(parameters('vmName'),'-Nic2')]",
         "type":"Microsoft.Network/networkInterfaces",
         "apiVersion":"2018-08-01",
         "location":"[parameters('location')]",
         "dependsOn":[
            "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
         ],
         "properties":{
            "ipConfigurations":[
               {
                  "name":"ipconfig1",
                  "properties":{
                     "privateIPAllocationMethod":"Static",
                     "privateIPAddress":"[parameters('subnet3StartAddress')]",
                     "subnet":{
                        "id":"[variables('subnet3Ref')]"
                     }
                  }
               }
            ],
            "enableIPForwarding":true
         }
      },
      {
         "name":"[concat(parameters('vmName'),'-Nic3')]",
         "type":"Microsoft.Network/networkInterfaces",
         "apiVersion":"2018-08-01",
         "location":"[parameters('location')]",
         "dependsOn":[
            "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
         ],
         "properties":{
            "ipConfigurations":[
               {
                  "name":"ipconfig1",
                  "properties":{
                     "privateIPAllocationMethod":"Static",
                     "privateIPAddress":"[parameters('subnet4StartAddress')]",
                     "subnet":{
                        "id":"[variables('subnet4Ref')]"
                     }
                  }
               }
            ],
            "enableIPForwarding":true
         }
      },
      {
         "name":"[parameters('vmName')]",
         "type":"Microsoft.Compute/virtualMachines",
         "apiVersion":"2019-07-01",
         "location":"[parameters('location')]",
         "dependsOn":[
            "[concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName'))]",
            "[concat('Microsoft.Network/networkInterfaces/',parameters('vmName'),'-Nic0')]",
            "[concat('Microsoft.Network/networkInterfaces/',parameters('vmName'),'-Nic1')]",
            "[concat('Microsoft.Network/networkInterfaces/',parameters('vmName'),'-Nic2')]",
            "[concat('Microsoft.Network/networkInterfaces/',parameters('vmName'),'-Nic3')]"
         ],
         "plan":{
            "name":"[variables('imageSKU')]",
            "publisher":"[variables('imagePublisher')]",
            "product":"[variables('imageOffer')]"
         },
         "properties":{
            "hardwareProfile":{
               "vmSize":"[variables('vmSizeEffective')]"
            },
            "osProfile":"[if(equals(parameters('authenticationType'),'password'), variables('osProfilepassword'), variables('osProfilesshPublicKey'))]",
            "storageProfile":{
               "imageReference":{
                  "publisher":"[variables('imagePublisher')]",
                  "offer":"[variables('imageOffer')]",
                  "sku":"[variables('imageSKU')]",
                  "version":"[variables('softwareVersion')]"
               },
               "osDisk":{
                  "name":"[variables('OSDiskName')]",
                  "vhd":{
                     "uri":"[concat(reference(resourceId(parameters('storageAccountRG'),'Microsoft.Storage/storageAccounts/', parameters('storageAccountName')), '2018-02-01').primaryEndpoints.blob,'vhds/', variables('OSDiskName'), '.vhd')]"
                  },
                  "caching":"ReadWrite",
                  "createOption":"FromImage",
                  "diskSizeGB":9
               }
            },
            "networkProfile":{
               "networkInterfaces":[
                  {
                     "properties":{
                        "primary":true
                     },
                     "id":"[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('vmName'),'-Nic0'))]"
                  },
                  {
                     "properties":{
                        "primary":false
                     },
                     "id":"[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('vmName'),'-Nic1'))]"
                  },
                  {
                     "properties":{
                        "primary":false
                     },
                     "id":"[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('vmName'),'-Nic2'))]"
                  },
                  {
                     "properties":{
                        "primary":false
                     },
                     "id":"[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('vmName'),'-Nic3'))]"
                  }
               ]
            },
            "diagnosticsProfile":{
               "bootDiagnostics":{
                  "enabled":true,
                  "storageuri":"[reference(resourceId(parameters('storageAccountRG'), 'Microsoft.Storage/storageAccounts/', parameters('storageAccountName')), '2018-02-01').primaryEndpoints.blob]"
               }
            }
         }
      }
   ]
}
